# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Can be changed to old api for compatibility reasons: extensions/v1beta1
apiVersion: apps/v1

Replicas: 1
ContainerName: bitbucket

# enable deploy below to install separate elasticsearch for bitbucket
# if set to true, you can set all elasticsearch values from https://github.com/Praqma/orbit-helm-charts/blob/master/elasticsearch/values.yaml
# under this section.
elasticsearch:
  deploy: false
  image:
    repository: praqma/orbit-elasticsearch
    tag: 5.5.3
  basic_auth:
    enabled: true
    username: "praqma"
  # you can pass the password here or create a secret containing
  # it and provide the secret name and key. The secret will be
  # used first if it is provided
    password: ""
    passwordSecretName: ""
    passwordSecretKey: ""
  persistence:
   # if you have an existing claim, provide it's name below
   # this claim will be used and no new ones will be created.
   # If you don't provide an existing claim name, a new PVC
   # will be created.
    existingClaimName: ""
   # define volume claim template.
    volumeClaimTemplates:
      accessModes: ReadWriteOnce
      storage: 20Gi
      storageClassName: manual
      selector:
        enabled: false
        matchLabels:
         # foo: foo
         # bar: bar

Datacenter:
  Enabled: false

#Â to add certs inside the docker container
Certs:
  Enabled: false
  # The secret below must be created in advance to contain all your certs
  # It will be mounted to the path you specify below inside the container
  # to create the secret, you can use the following command:
  # kubectl create secret generic my-top-secret --from-file=path/to/certs/dir --namespace my-ns
  SecretName: my-top-secret
  MountPath: /var/atlassian/certs/

Image:
  Name: "praqma/bitbucket"
  Tag: "6.3.0"
  ImagePullPolicy: "Always"
  PrivateRegistry: true
  PullSecret: "docker-hub-credentials"

ContainerPort: 7990
TerminationGracePeriodSeconds: 50

EnvVars:
  X_PROXY_NAME: "bitbucket.example.com"
  X_PROXY_PORT: "443"
  X_PROXY_SCHEME: "https"
  X_CONTEXT_PATH: ""
  X_PROXY_SECURE: "true"
  ADDITIONAL_CONNECTOR: "true"
  CATALINA_OPTS: ""
  JAVA_OPTS: ""
  K8S_ENABLE_ETC_HOSTS_UPDATE: "false"
  K8S_PROXY_INTERNAL_FQDN: "traefik.kube-system.svc.cluster.local"
  K8S_SERVICE_PUBLIC_FQDN: "stash.example.com"


# livenessProbe:
#   Path:
#   Port:
ReadinessProbe:
  Path: /status
  Port: bitbucket-main

Resources:
  cpuRequest: 100m
  cpuLimit: 1500m
  memoryRequest: 1024Mi
  memoryLimit: 2048Mi

SecurityContext: 1000


Persistence:
   # define volume claim template.
   VolumeClaimTemplates:
     AccessModes: ReadWriteOnce
     Storage: 20Gi
     ## If defined, storageClassName: <storageClass>
     ## If set to "-", storageClassName: "", which disables dynamic provisioning
     ## If undefined (the default) or set to null, no storageClassName spec is
     ##   set, choosing the default provisioner.
     StorageClassName: gp2
     Selector:
       Enabled: false
       MatchLabels: {}
         # foo: foo
         # bar: bar

   # datacenter volume -- Needs Datacenter.Enabled to be set to true or else it would be ignored.
   DatacenterExistingClaimName: ""
   DatacenterMountPath: /var/atlassian/bitbucket-datacenter/
   DatacenterVolumeClaimTemplates:
     AccessModes: ReadWriteMany
     Storage: 20Gi
     ## If defined, storageClassName: <storageClass>
     ## If set to "-", storageClassName: "", which disables dynamic provisioning
     ## If undefined (the default) or set to null, no storageClassName spec is
     ##   set, choosing the default provisioner.
     StorageClassName: gp2
     Selector:
       Enabled: false
       MatchLabels: {}
         # foo: foo
         # bar: bar

PodDisruption:
  Enabled: false
  MinAvailable: 1

SshService:
  Enabled: false
  Type: NodePort
  # NodePort: 31000
  # LoadBalancerIP: "1.2.3.4"
  # Annotations:
  #   key: value

Service:
  #Name: "bitbucket"
  Type: ClusterIP
  Port: 7990
  Protocol: TCP
  Annotations:
    traefik.backend.loadbalancer.sticky: "true"

Ingress:
  Enabled: true
  Host: bitbucket.example.com
  ServicePort: 7990
  # Annotations:
  #   ingress.kubernetes.io/force-ssl-redirect: "true"
  Tls:
    Enabled: False
    SecretName: ""

# to add promethues annotations
PrometheusMetrics:
  Enabled: false
  Path: /plugins/servlet/prometheus/metrics

# list of plugins (plugin IDs) to be pre-installed
PluginIds: []
  # - ru.andreymarkelov.atlas.plugins.prom-confluence-exporter

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
#
nodeSelector: {}
  # Don't forget to remove the brackets above if you want to use a selector.
  # disktype: ssd
  # size: large

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# Don't forget to remove the brackets above if you want to use tolerations.
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
  # Don't forget to remove the brackets above if you want to use affinity.
  # podAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #         - key: security
  #           operator: In
  #           values:
  #           - S1
  #       topologyKey: failure-domain.beta.kubernetes.io/zone
  #   podAntiAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 100
  #       podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: security
  #             operator: In
  #             values:
  #             - S2
  #         topologyKey: kubernetes.io/hostname
